<!DOCTYPE html>
<!-- saved from url=(0094)http://svn.apache.org/viewvc/tomcat/tc7.0.x/trunk/webapps/examples/websocket/chat.html?view=co -->
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Apache Tomcat WebSocket Examples: Chat</title>
    <link href="/resources/bootstrap/css/bootstrap.css" rel="stylesheet">
    <script src='/resources/angular.js'></script>
    <script src='/resources/controller.js'></script>
    <script src='/resources/chat/js/chatsocket.js'></script>
</head>
<body>
<div class="container" >
    <div class="body-content">
        <div class="row">
            <div draggable="true" class="col-lg-4 panel" ng-app = "ChatApp">
                <div class="panel-heading">Chatter</div>
                <div>
                    <div class="input-group">
                        <input id="messageInput" type="text" class="form-control">
                      <span class="input-group-btn">
                        <button class="btn btn-default" type="button" onclick="sendData();">Go!</button>
                      </span>
                        <script src="//vk.com/js/api/openapi.js" type="text/javascript"></script>

                        <div id="login_button" onclick="VK.Auth.login(authInfo);"></div>
                        <button id="logout_button" onclick="VK.Auth.logout(authInfo);">Logout</button>

                        <script language="javascript">
                            var enteredUser;
                            var messages = [];
                            function sendData(){
                                var message = document.getElementById('messageInput').value;
                                var messageObj = {sender:enteredUser, text:message, recipients:[]};
                                Chat.socket.send(angular.toJson(messageObj));
                            }
                            VK.init({
                                apiId: 4551676
                            });
                            function authInfo(response) {
                                if (response.session) {
                                    VK.Api.call('users.get', {uids: response.session.mid, fields:"screen_name,photo_200_orig"}, function(r) {
                                        if(r.response) {
                                            enteredUser = r.response[0].screen_name;
                                            Chat.initialize('/ws/chat?screen_name=' + r.response[0].screen_name +
                                                    '&first_name=' + r.response[0].first_name +
                                                    '&last_name=' + r.response[0].last_name +
                                                    '&photo_200_orig=' + r.response[0].photo_200_orig,'blob');
                                            Chat.socket.onmessage = function(evt){
                                                var dataObj = angular.fromJson(evt.data);
                                                switch (dataObj.eventType) {
                                                    case 'MESSAGE':
                                                        var el = document.getElementsByClassName('ng-scope')[1];
                                                        var scope = angular.element(el).scope()
                                                        scope.pushToArray(dataObj.message);
                                                        scope.$apply();
                                                        break;
                                                    case 'USER_CONNECTED':
                                                            enteredUser = dataObj.member.nick;
                                                        break;
                                                    case 'USER_DISCONNECTED':
                                                        break;
                                                }
                                            }
                                        }
                                    });
                                } else {
                                    alert('not auth');
                                }
                            }
                            VK.Auth.login(authInfo);
                            VK.UI.button('login_button');
                        </script>
                    </div>
                </div>
                <br />
                <div class="highlight" style="overflow: auto;width:auto;height: 600px;" ng-controller = "ChatController">
                    <ul class="list-group" ng->
                        <li class="list-group-item" ng-repeat="message in messageArr">
                            <span class="badge">{{message.sender}}</span>
                            <p>{{message.text}}</p>
                       </li>
                    </ul>
                </div>
            </div>
            <div class="col-lg-8">
                <h1>Conference</h1>
            </div>
        </div>
    </div>
</div>
</body>
</html>